name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔍 Run linting
      run: npm run lint

    - name: 🧪 Run tests
      run: npm run test:ci

    - name: 📊 Generate coverage report
      run: npm run test:coverage

    - name: 📤 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build application
      run: npm run build

    - name: 📦 Build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          build/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🛡️ Run security audit
      run: npm audit --audit-level moderate

    - name: 🔍 Check for vulnerabilities
      uses: github/super-linter/slim@v5
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_TYPESCRIPT_ES: true
        VALIDATE_JSON: true
        VALIDATE_MD: true

  hacktoberfest-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'hacktoberfest')

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🎃 Validate Hacktoberfest contribution
      run: |
        # Check if PR has meaningful changes
        CHANGED_FILES=$(git diff --name-only HEAD~1)
        if [ -z "$CHANGED_FILES" ]; then
          echo "❌ No files changed in this PR"
          exit 1
        fi

        # Check for spam patterns (very small changes)
        LINES_CHANGED=$(git diff --stat HEAD~1 | tail -1 | awk '{print $4+$6}')
        if [ "$LINES_CHANGED" -lt 10 ]; then
          echo "⚠️  Very few lines changed. Please ensure this is a meaningful contribution."
        fi

        echo "✅ Hacktoberfest contribution validated"

  holopin-badge:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    needs: [test, build, security]

    steps:
    - name: 🎖️ Award Holopin Badge
      uses: holopin/holopin-github-action@v1
      with:
        credentials_json: ${{ secrets.HOLOPIN_CREDENTIALS }}
        event: "merged-pr"
        badge: "hacktoberfest-2025-contributor"

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, build]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to preview environment
      run: |
        echo "🚀 Preview deployment would happen here"
        echo "Preview URL: https://preview-${{ github.event.pull_request.number }}.hacktoberfest-2025.vercel.app"

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: [test, build, security]

    steps:
    - name: 📢 Notify on failure
      if: failure()
      run: |
        echo "❌ CI/CD pipeline failed"
        echo "Please check the logs and fix any issues"

    - name: 🎉 Notify on success
      if: success()
      run: |
        echo "✅ All checks passed!"
        echo "🎃 Ready for Hacktoberfest contributions"